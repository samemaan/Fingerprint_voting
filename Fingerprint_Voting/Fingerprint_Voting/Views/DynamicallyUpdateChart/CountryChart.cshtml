@model Fingerprint_Voting.Models.DynamicChartsModel

@{
    ViewBag.Title = "";
}
<script src="http://code.jquery.com/jquery-1.10.2.js"
        integrity="sha256-it5nQKHTz+34HijZJQkpNBIHsjpV8b6QzMJs9tmOBSo="
        crossorigin="anonymous"></script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<style>
    label {
        font-size: 18px;
        font-weight: lighter;
    }
    select {
        width: 250px;
        height: 40px;
        padding: 0 14px;
        font-size: 16px;
    }
</style>
<h2 style="margin:25px 0; color:#5a5a5a;"> Data Chart </h2>   <div class="clear"> </div>
<div class="row">
    <div class="col-md-6">
        <section id="loginForm" style="margin-bottom:25px;">
            <span style="margin-right:15px; font-size:15px; font-weight:lighter;">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            </span>
            @Html.DropDownListFor(model => model.Country, new SelectList(Model.Countries, "Text"), new { @onchange = "getCampaigns(this)", @id = "CountryNameList"})
        </section>
    </div>
    <div class="col-md-6">
        <section id="campaignLoadDropDown" style="margin-bottom:25px;">
            <span style="margin-right:15px; font-size:15px; font-weight:lighter;">
                @Html.LabelFor(model => model.Campagin, htmlAttributes: new { @class = "control-label col-md-2" })
            </span>
            @Html.DropDownListFor(model => model.Campagin, new SelectList(Model.Campaigns, "Text"), new { @onchange = "drawChart(this)", @id = "CampaignNameList"})
        </section>
    </div>
</div>

<div class="clear"> </div>
<div>
    <div id="Areachart_div" style="height: 800px; width: 100%;">
    </div>
</div>


<script type="text/javascript">

    google.load("visualization", "1", {packages: ["corechart"]});
    google.setOnLoadCallback(drawChart);

    function getCampaigns()
    {
        var Country = $('#CountryNameList :selected').val();
        var Campaign = $('#CampaignNameList :selected').val();
        $.ajax({
            url: '@Url.Action("CountryDashboardList", "DynamicallyUpdateChart")',
            dataType: "json",
            data:
            {
                Country: Country
            },
            type: "GET",
            error: function (xhr, status, error)
            {
                var err = eval("(" + xhr.responseText + ")");
                toastr.error(err.message);
            },
            beforeSend: function ()
            {
                $("#campaignLoadDropDown").show();
            },
            success: function (data)
            {
                CountryDashboardList(data);// call the function in backend code and pass the selected values
                return false;
            },
            error: function (xhr, status, error)
            {
                var err = eval("(" + xhr.responseText + ")");
                toastr.error(err.message);
            },
            complete: function ()
            {
                $("#campaignLoadDropDown").show()
            }
        });
        return false;
    }

    function CountryDashboardList(data) // in the following function is filling the second drop-down on selected country to get the campaigns
    {
        //console.log(data);
        //console.log(data.Campaigns);
        $("#CampaignNameList").html(""); // clear before appending new list
        $("#CampaignNameList").append(
            $('<option disabled selected value>----select Campaign----</option>'));

        $.each(data.Campaigns, function (i, campaign) {
            $("#CampaignNameList").append(
                $('<option></option>').val(campaign).html(campaign));
        });
        return false;
    };

    function drawChart() // draw the chart in this function by passing the selected values and pass as parameter to the backend code
    {
        var Country = $('#CountryNameList :selected').val();
        var Campaign = $('#CampaignNameList :selected').val();

        $.ajax({
            url: '@Url.Action("CampaignDashboardList", "DynamicallyUpdateChart")',
            dataType: "json",
            data:
            {
                Country: Country,
                Campaign: Campaign
            },
            type: "GET",
            error: function (xhr, status, error)
            {
                var err = eval("(" + xhr.responseText + ")");
                toastr.error(err.message);
            },
            beforeSend: function ()
            {
                $("#campaignLoadDropDown").show();
            },
            success: function (data)
            {

                CampaignDashboardList(data);// call the function in backend code and pass the selected values
                return false;
            },
            error: function (xhr, status, error)
            {
                var err = eval("(" + xhr.responseText + ")");
                toastr.error(err.message);
            },
            complete: function ()
            {
                $("#campaignLoadDropDown").show()
            }
        });
        return false;
    }

    function CampaignDashboardList(data) // in the following function is filling the second drop-down on selected country to get the campaigns
    {
        //console.log(data);
        var candidates = data[2]; // list of all the candidates as in string
        //Pereparing string into array
        var candidatesArray = candidates.split(',');
        var votes = data[3];
        var users = data[4];
        votes = votes.split(',');
        //users = users.split(',');
        var data1 = new google.visualization.DataTable();
        data1.addColumn('string', 'Candidate');
        data1.addColumn('number', 'Given Vote');
        data1.addColumn('number', 'Possiable Votes');

        //console.log(votes + "AFTER")
        for (i = 0; i < candidatesArray.length; i++)
        {
            //data1.addRow([candidatesArray[i].toString(), parseInt(votes[i]), parseInt(users[i])]);
            data1.addRow([candidatesArray[i].toString(), parseInt(votes[i]), parseInt(users)]);
        }

        //data1.addRow([null, null, parseInt(users)]);
        var options = {
            titleTextStyle: {
                color: 'white',    
                fontSize: 20
            },
            title: 'Total Numbers of Voters in The Country = ' + data[5],
            colors: ['35b24c', '#FBBC05'],
            backgroundColor: '#595959',
            animation: {
                duration: 1200,
                easing: 'out',
                startup: true
            },
            hAxis:
            {
                title: 'Candidates',
                titleTextStyle:
                {
                    italic: true,
                    color: '#00BBF1',
                    fontSize: '30'
                },
                textStyle:
                {
                    color: '#f5f5f5'
                }
            },
            vAxis:
            {
                baselineColor: '#f5f5f5',
                title: 'Total Votes',
                titleTextStyle:
                {
                    color: '#00BBF1',
                    italic: true,
                    fontSize: '30'
                },
                textStyle:
                {
                    color: '#f5f5f5'
                },
            }
        };
        //Different chart types >> AreaChart , BubbleChart ,LineChart ,ScatterChart
        var chart = new google.visualization.ColumnChart(document.getElementById('Areachart_div'));
        chart.draw(data1, options);

        return false;
    };
</script>  